#labels bitlyj2.0
#How to roll your own methods.

= Details =

*The details are slim until the API is stable.*

Here's how you roll your own method. The following example would add support for bitly's  [http://code.google.com/p/bitly-api/wiki/ApiDocumentation#/v3/validate validate] method.

{{{
public class Validate extends BitlyMethod<Boolean> {

	public Validate(String user, String apiKey) {
		super("validate", user, apiKey);
	}

	@Override
	public Boolean apply(Document document) {
		String valid = document.getElementsByTagName("valid")
			.item(0).getTextContent();
		return Integer.parseInt(valid) == 1;
	}

}
}}}

Now that you have your own method, you can call it like any other:

{{{
Validate validate = new Validate("notbilytapi", "not_apikey");
boolean isValid = as("bitlyapidemo", "R_0da49e0a9118ff35f52f629d2d71bf07").call(validate);
}}}

Note that you don't need to do any error checking. In bitly 2, it's the shortener implementation's job to invoke the remote method, parse its payload, and do basic error checking before ever calling your method implementation. If an I/O error occurs, or bitly responds with and error message (or even garbled data), your method won't be called and the shortener will have thrown and informative exception.